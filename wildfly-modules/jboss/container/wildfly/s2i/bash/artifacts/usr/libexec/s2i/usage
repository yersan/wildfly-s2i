#!/bin/sh

cat <<EOF
This is an S2I WildFly $WILDFLY_VERSION centos base image responsible for consuming a JEE project
and deploying it onto WildFly application server.
To use it, install S2I: https://github.com/openshift/source-to-image.

Sample invocation:

s2i build git://github.com/openshift/openshift-jee-sample wildfly/wildfly-centos:latest wildflytest

You can then run the resulting image via:
docker run -p 8080:8080 wildflytest

Details:
If a pom.xml is present in the source directory, the project is built with maven and the
output in target will be copied into the Wildfly deployments directory.
If war files are present in <src>/target or <src>/deployments they will be copied
into the Wildfly deployments directory as is.
Wildfly configuration can be overridden by supplying files in <src>/cfg, these files
will be copied into Wildfly standalone/configuration.
The default Maven build arguments can be overridden by setting MAVEN_ARGS via the "--env" argument to S2I
The default Maven build arguments can be appended by setting MAVEN_ARGS_APPEND.

Galleon provisioning of WildFly server when building application src

If a maven project located in <src>/wildfly-galleon exists, the provisioning of a new WildFly server is started from this project. 
The output of this project must be a <src>/wildfly-galleon/target/wildfly directory. This directory content is then used to replace the default WildFly server 
present in the image.

It is possible to reference a galleon maven project contained in the image by setting GALLEON_PROVISION_SERVER via the "--env" argument to S2I.


Reuse of built artifacts in chained builds

The build output along with the WildFly server in use is copied to /s2i-output/wildfly.
The directory /s2i-output/wildfly can be used as input to chained builds or docker multistages builds.
EOF
