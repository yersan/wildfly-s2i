#!/bin/sh
# Openshift WildFly runtime configuration update

source ${JBOSS_HOME}/bin/launch/openshift-cli-modules.sh
source $JBOSS_HOME/bin/launch/logging.sh

function exec_cli_scripts() {

  # Dump the cli script file for debugging
  if [ "${CLI_DEBUG^^}" = "TRUE" ]; then
    echo "================= CLI files debug ================="
    echo "=========== ${CLI_DRIVERS_FILE} contents:"
    cat "${CLI_DRIVERS_FILE}"
    echo "=========== ${CLI_SCRIPT_FILE} contents:"
    cat "${CLI_SCRIPT_FILE}"
    echo "=========== ${CLI_SCRIPT_PROPERTY_FILE} contents:"
    cat "${CLI_SCRIPT_PROPERTY_FILE}"
    echo "==================================================="
  fi

  if [ -s "${CLI_SCRIPT_FILE}" ] || [ -f "${CLI_DRIVERS_FILE}" ]; then
    #Check we are able to use the jboss-cli.sh
    if ! [ -f "${JBOSS_HOME}/bin/jboss-cli.sh" ]; then
      echo "Cannot find ${JBOSS_HOME}/bin/jboss-cli.sh. Scripts cannot be applied"
      exit 1
    fi

    systime=$(date +%s)
    CLI_SCRIPT_FILE_FOR_EMBEDDED=/tmp/cli-configuration-script-${systime}.cli
    echo "embed-server --timeout=30 --server-config=${SERVER_CONFIG} --std-out=discard" > ${CLI_SCRIPT_FILE_FOR_EMBEDDED}
    if [ -f "${CLI_DRIVERS_FILE}" ]; then
      cat ${CLI_DRIVERS_FILE} >> ${CLI_SCRIPT_FILE_FOR_EMBEDDED}
    fi
    cat ${CLI_SCRIPT_FILE} >> ${CLI_SCRIPT_FILE_FOR_EMBEDDED}
    echo "" >> ${CLI_SCRIPT_FILE_FOR_EMBEDDED}
    echo "stop-embedded-server" >> ${CLI_SCRIPT_FILE_FOR_EMBEDDED}

    echo "Configuring the server using embedded server"
    start=$(date +%s%3N)
    ${JBOSS_HOME}/bin/jboss-cli.sh --file=${CLI_SCRIPT_FILE_FOR_EMBEDDED} --properties=${CLI_SCRIPT_PROPERTY_FILE}
    cli_result=$?
    end=$(date +%s%3N)

    echo "Duration: " $((end-start)) " milliseconds"


    if [ $cli_result -ne 0 ]; then
      echo "Error applying ${CLI_SCRIPT_FILE_FOR_EMBEDDED} CLI script. Embedded server cannot start or the operations to configure the server failed."
      exit 1
    elif [ -s "${CLI_SCRIPT_ERROR_FILE}" ]; then
      echo "Error applying ${CLI_SCRIPT_FILE_FOR_EMBEDDED} CLI script. Embedded server started successful. The Operations were executed but there were unexpected values. See list of errors in ${CLI_SCRIPT_ERROR_FILE}"
      exit 1
    elif [ "${SCRIPT_DEBUG}" != "true" ] ; then
      rm ${CLI_SCRIPT_FILE} 2> /dev/null
      rm ${CLI_SCRIPT_PROPERTY_FILE} 2> /dev/null
      rm ${CLI_SCRIPT_ERROR_FILE} 2> /dev/null
      rm ${CLI_SCRIPT_FILE_FOR_EMBEDDED} 2> /dev/null
      rm ${CLI_DRIVERS_FILE} 2> /dev/null
    fi
  fi
}

systime=$(date +%s)
#This is the cli file generated
CLI_SCRIPT_FILE=/tmp/cli-script-${systime}.cli
#This is the file used to log errors by the CLI execution
CLI_SCRIPT_ERROR_FILE=/tmp/cli-script-error-${systime}.cli
#The property file used to pass variables to jboss-cli.sh
CLI_SCRIPT_PROPERTY_FILE=/tmp/cli-script-property-${systime}.cli
echo " ----------------------------------------> ${CLI_DRIVERS_FILE}"
#Special CLI file used by s2i install script to add new drivers, see jboss/container/eap/s2i/install-common.sh
CLI_DRIVERS_FILE=${JBOSS_HOME}/bin/launch/drivers.cli

echo "error_file=${CLI_SCRIPT_ERROR_FILE}" > ${CLI_SCRIPT_PROPERTY_FILE}

source $JBOSS_HOME/bin/launch/configure-modules.sh

configureCliModules

exec_cli_scripts

if [ "${SCRIPT_DEBUG}" = "true" ] ; then
  echo "CLI Script used to configure the server: "${CLI_SCRIPT_FILE_FOR_EMBEDDED}
  echo "CLI Script generated by launch: " ${CLI_SCRIPT_FILE}
  echo "CLI Script property file: " ${CLI_SCRIPT_PROPERTY_FILE}
  echo "CLI Script error file: " ${CLI_SCRIPT_ERROR_FILE}
fi
